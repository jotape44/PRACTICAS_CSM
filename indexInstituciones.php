<?php
require 'googleDrive/GoogleDriveClient.php';
require 'googleDrive/GoogleDriveManager.php';
require 'googleDrive/GoogleFolderId.php';
require 'trello/TrelloClient.php';
require 'trello/TrelloManager.php';
require 'trello/TrelloAuthorize.php';
require 'trello/TrelloKey.php';

// üìå CONFIGURA TUS VARIABLES
$cardDesc = "Descripci√≥n de la nueva tarea en Trello";
$boardName = "Tablero Automatizado 4";
$boardDesc = "Un tablero creado autom√°ticamente si no existe";

// ‚úÖ Inicializa el gestor de clave de API Trello
$apiKeyManager = new TrelloApiKeyManager();
$trelloKey = $apiKeyManager->getApiKey();

// Crea una instancia del gestor de autorizaci√≥n de Trello, responsable de manejar la autenticaci√≥n y obtenci√≥n del token de acceso.
$trello = new TrelloAuthorize();

// Usa el objeto de autorizaci√≥n junto con la API Key para obtener el token de acceso necesario para interactuar con la API de Trello.
$trelloToken = $trello->KeyToken($trelloKey);

// Crea el cliente de Trello, configurado con la API Key y el token de acceso, para realizar peticiones autenticadas a la API.
$trelloClient = new TrelloClient($trelloKey, $trelloToken);

// Instancia el gestor de Trello para crear tableros, listas y tarjetas utilizando el cliente autenticado.
$trelloManager = new TrelloManager($trelloClient);

// ‚úÖ Instanciar clientes y gestores
$googleDriveClient = new GoogleDriveClient();
$driveManager = new GoogleDriveManager($googleDriveClient);

// üìå CONFIGURACI√ìN CHECKLIST
$checklistNameNuevo = "TAREA COLEGIO NUEVO";  // Nombre del checklist
$checklistItemsNuevo = [
    "Cargar Desempe√±os",
    "Modigicar directores de grupo",
    "Crear plan de estudios",
    "Cargar docentes",
    "Cargar asignaturas a los grados",
    "Cargar areas asignaturas",
    "Cargar estudiantes",
    "Cargar escudo",
    "Cargar daos de vigencia y datos de valoraciones (escalas comportamieno, par√°metros, etc)",
    "Cargar sedes",
    "Crear datos iniciales en la base de datos",
    "Cargar estructura de la base de datos",
    "Crear los datos de la instituci√≥n por medio del servicio institucion/guardar", 
    "Crear base de datos"
];  

$checklistNameAntiguo = "TAREA COLEGIO ANTIGUO";  // Nombre del checklist
$checklistItemsAntiguo = [
    "Confirmar cantidad de periodos y fechas",
    "Confirmar datos de vigencia y datos de valoraciones (escalas comportamiento, par√°metros, etc)",
    "Revisar y/o cargar desempe√±os",
    "Modificar directores de grupo",
    "Cargar/Revisar plan de estudio",
    "Cargar estudiantes",
    "Configurar cierre vigencia 2024"
];

$arrayListas = [
    "Terminado",
    "Cargue de desempe√±os",
    "Alistamiento",
    "Cargue inicial",
    "Pendiente"
];

// Obt√©n o crea el tablero y consigue su ID
$board = $trelloManager->CreateBoard($boardName, $boardDesc);
$boardId = $board['id'];
echo "Tablero Creado: $boardId\n";  

$pendienteListId = null;

foreach ($arrayListas as $itemLista) {
    $listName = $itemLista;
    $list = $trelloManager->CreateList($boardId, $listName);
    $listId = $list['id'];

    
   if ($itemLista === "Pendiente") {
        $pendienteListId = $listId;
    }
}

// Mostrar solo el ID de la lista "Pendiente"
if ($pendienteListId !== null) {
    echo "ID de la lista 'Pendiente': $pendienteListId\n";
} else {
    echo "La lista 'Pendiente' no fue encontrada.\n";
}

// echo "Lista Creado: $listId\n";

$json = '[{"nombre":"Eugenio Ferro","nuevo":false},{"nombre":"Maria Auxiliadora","nuevo":false},{"nombre":"Colegio Nuevo","nuevo":true}]';

// Convertir JSON a array de objetos stdClass
$instituciones = json_decode($json);
foreach ($instituciones as $itemInstitucion) {
    $nombreColegio = $itemInstitucion->nombre;
    $esNuevo = $itemInstitucion->nuevo;

    // Elegir nombre de checklist e items seg√∫n si es nuevo o antiguo
    if ($esNuevo) {
        $checklistName = $checklistNameNuevo;
        $checklistItems = $checklistItemsNuevo;
    } else {
        $checklistName = $checklistNameAntiguo;
        $checklistItems = $checklistItemsAntiguo;
    }

 // Crear la tarjeta para este colegio
    $cardDesc = "Tareas para el colegio: " . $nombreColegio;
    $trelloCard = $trelloManager->createCard($pendienteListId, $nombreColegio, $cardDesc);
    $trelloCardId = $trelloCard['id'];

    echo "ID de la nueva tarjeta creada para $nombreColegio: " . $trelloCardId . "<br>";

 // Crear el checklist en la tarjeta
    $checklist = $trelloManager->createChecklistInCard($trelloCardId, $checklistName);
    if (!isset($checklist['id'])) {
        echo "‚ö†Ô∏è Error al crear el checklist para $nombreColegio.<br>";
        continue;
    }
    $checklistId = $checklist['id'];
    $trelloManager->addItemsToChecklist($checklistId, $checklistItems);
    echo "‚úÖ Checklist creado para $nombreColegio: " . $checklistId . "<br>";

 // Crear subcarpeta en Google Drive con el nombre del colegio
    $subfolderName = $nombreColegio;
// ‚úÖ OBTENER ID DE CARPETA EN GOOGLE DRIVE
    $parentFolderId = getGoogleFolderId(); // Llama a la funci√≥n para obtener la ID de la carpeta
    $subfolder = $driveManager->createSubfolder($parentFolderId, $subfolderName);
    $subfolderUrl = $subfolder->webViewLink;
    echo "‚úÖ Subcarpeta creada para $nombreColegio: " . $subfolderUrl . "<br>";

    // Adjuntar el enlace en la tarjeta de Trello
    $trelloResponse = $trelloManager->attachFolderToCard($subfolderUrl, $trelloCardId);
    echo "‚úÖ Adjunto en Trello para $nombreColegio: " . $trelloResponse['id'] . "<br>";
}

/* 
//-------------Crear carpeta en Google Driver

// ‚úÖ Crear subcarpeta en Google Drive
$subfolder = $driveManager->createSubfolder($parentFolderId, $subfolderName);
$parentFolderId = $subfolder->id;

// ‚úÖ Crear sub-subcarpeta en Google Drive
$subfolder = $driveManager->createSubfolder($parentFolderId, $subfolderName);
$subfolderUrl = $subfolder->webViewLink;
echo "‚úÖ Subcarpeta creada: " . $subfolderUrl . "\n";

// ‚úÖ Adjuntar el enlace en la nueva tarjeta de Trello
$trelloResponse = $trelloManager->attachFolderToCard($subfolderUrl, $trelloCardId);
echo "‚úÖ Adjunto en Trello: " . $trelloResponse['id']; */

?>
